// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyHomeProject.Data.DataContext;

namespace MyHomeProject.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyHomeProject.Core.Models.Commune", b =>
                {
                    b.Property<int>("CommuneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeCommune")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VilleID")
                        .HasColumnType("int");

                    b.HasKey("CommuneID");

                    b.HasIndex("VilleID");

                    b.ToTable("Communes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.EtatTransaction", b =>
                {
                    b.Property<int>("EtatTransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeEtatTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EtatTransactionID");

                    b.ToTable("EtatTransactions");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int>("ProprieteID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.HasIndex("ProprieteID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Pays", b =>
                {
                    b.Property<int>("PaysID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationalite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaysID");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Personne", b =>
                {
                    b.Property<int>("PersonneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeSexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CompteCreate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domicile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifiant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomComplet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaysID")
                        .HasColumnType("int");

                    b.Property<string>("Prenoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleTypeID")
                        .HasColumnType("int");

                    b.Property<int>("SexeID")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonneID");

                    b.HasIndex("PaysID");

                    b.HasIndex("RoleTypeID");

                    b.HasIndex("SexeID");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.ProgrammeImmobilier", b =>
                {
                    b.Property<int>("ProgrammeImmobilierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeProgrammeImmobilier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDebutProgramme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuartierID")
                        .HasColumnType("int");

                    b.HasKey("ProgrammeImmobilierID");

                    b.HasIndex("QuartierID");

                    b.ToTable("ProgrammeImmobiliers");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Propriete", b =>
                {
                    b.Property<int>("ProprieteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtatTransactionID")
                        .HasColumnType("int");

                    b.Property<bool>("ExistTerraste")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbreChambre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbreSalleDeBain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbreSalon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgrammeImmobilierID")
                        .HasColumnType("int");

                    b.Property<string>("ProprieteNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuartierID")
                        .HasColumnType("int");

                    b.Property<string>("Superficie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeProprieteID")
                        .HasColumnType("int");

                    b.Property<int>("TypeStandingID")
                        .HasColumnType("int");

                    b.Property<int>("TypeTransactionID")
                        .HasColumnType("int");

                    b.HasKey("ProprieteID");

                    b.HasIndex("EtatTransactionID");

                    b.HasIndex("ProgrammeImmobilierID");

                    b.HasIndex("QuartierID");

                    b.HasIndex("TypeProprieteID");

                    b.HasIndex("TypeStandingID");

                    b.HasIndex("TypeTransactionID");

                    b.ToTable("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Quartier", b =>
                {
                    b.Property<int>("QuartierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeQuartier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommuneID")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuartierID");

                    b.HasIndex("CommuneID");

                    b.ToTable("Quartiers");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.RoleType", b =>
                {
                    b.Property<int>("RoleTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeTitre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilisateurID")
                        .HasColumnType("int");

                    b.HasKey("RoleTypeID");

                    b.HasIndex("UtilisateurID");

                    b.ToTable("RoleTypes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Sexe", b =>
                {
                    b.Property<int>("SexeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeSexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SexeID");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Societe", b =>
                {
                    b.Property<int>("SocieteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeSociete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsSiege")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSociete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuartierID")
                        .HasColumnType("int");

                    b.Property<string>("contact")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocieteID");

                    b.HasIndex("QuartierID");

                    b.ToTable("Societes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypePropriete", b =>
                {
                    b.Property<int>("TypeProprieteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeProprieteID");

                    b.ToTable("TypeProprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypeStanding", b =>
                {
                    b.Property<int>("TypeStandingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeStandingID");

                    b.ToTable("TypeStandings");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypeTransaction", b =>
                {
                    b.Property<int>("TypeTransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeTransactionID");

                    b.ToTable("TypeTransactions");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PersonneID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtilisateurID");

                    b.HasIndex("PersonneID");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Ville", b =>
                {
                    b.Property<int>("VilleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeVille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaysID")
                        .HasColumnType("int");

                    b.HasKey("VilleID");

                    b.HasIndex("PaysID");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Commune", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Ville", "Ville")
                        .WithMany()
                        .HasForeignKey("VilleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Image", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Propriete", "Propriete")
                        .WithMany("Images")
                        .HasForeignKey("ProprieteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propriete");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Personne", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Pays", "Pays")
                        .WithMany()
                        .HasForeignKey("PaysID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.RoleType", null)
                        .WithMany("Personnes")
                        .HasForeignKey("RoleTypeID");

                    b.HasOne("MyHomeProject.Core.Models.Sexe", "Sexe")
                        .WithMany("Personnes")
                        .HasForeignKey("SexeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pays");

                    b.Navigation("Sexe");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.ProgrammeImmobilier", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Quartier", "Quartier")
                        .WithMany("ProgrammeImmobiliers")
                        .HasForeignKey("QuartierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quartier");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Propriete", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.EtatTransaction", "EtatTransaction")
                        .WithMany("Proprietes")
                        .HasForeignKey("EtatTransactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.ProgrammeImmobilier", "ProgrammeImmobilier")
                        .WithMany("Proprietes")
                        .HasForeignKey("ProgrammeImmobilierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.Quartier", "Quartier")
                        .WithMany("Proprietes")
                        .HasForeignKey("QuartierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.TypePropriete", "TypePropriete")
                        .WithMany("Proprietes")
                        .HasForeignKey("TypeProprieteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.TypeStanding", "TypeStanding")
                        .WithMany("Proprietes")
                        .HasForeignKey("TypeStandingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHomeProject.Core.Models.TypeTransaction", "TypeTransaction")
                        .WithMany("Proprietes")
                        .HasForeignKey("TypeTransactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EtatTransaction");

                    b.Navigation("ProgrammeImmobilier");

                    b.Navigation("Quartier");

                    b.Navigation("TypePropriete");

                    b.Navigation("TypeStanding");

                    b.Navigation("TypeTransaction");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Quartier", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Commune", "Commune")
                        .WithMany("Quartiers")
                        .HasForeignKey("CommuneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.RoleType", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Utilisateur", null)
                        .WithMany("UtilisateurRoles")
                        .HasForeignKey("UtilisateurID");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Societe", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Quartier", "Quartier")
                        .WithMany()
                        .HasForeignKey("QuartierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quartier");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Utilisateur", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Personne", "Personne")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("PersonneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Ville", b =>
                {
                    b.HasOne("MyHomeProject.Core.Models.Pays", "Pays")
                        .WithMany("Villes")
                        .HasForeignKey("PaysID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Commune", b =>
                {
                    b.Navigation("Quartiers");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.EtatTransaction", b =>
                {
                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Pays", b =>
                {
                    b.Navigation("Villes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Personne", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.ProgrammeImmobilier", b =>
                {
                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Propriete", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Quartier", b =>
                {
                    b.Navigation("ProgrammeImmobiliers");

                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.RoleType", b =>
                {
                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Sexe", b =>
                {
                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypePropriete", b =>
                {
                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypeStanding", b =>
                {
                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.TypeTransaction", b =>
                {
                    b.Navigation("Proprietes");
                });

            modelBuilder.Entity("MyHomeProject.Core.Models.Utilisateur", b =>
                {
                    b.Navigation("UtilisateurRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
